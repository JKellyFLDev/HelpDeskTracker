// <auto-generated />
using System;
using LeafFilter.HelpDesk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeafFilter.HelpDesk.Data.Migrations
{
    [DbContext(typeof(HelpDeskContext))]
    partial class HelpDeskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.JoinTables.TicketIssue", b =>
                {
                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IssueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TicketId", "IssueId");

                    b.HasIndex("IssueId")
                        .IsUnique();

                    b.HasIndex("TicketId")
                        .IsUnique();

                    b.ToTable("TicketIssue");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IssueSeverityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IssueSeverityId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Process", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdminPage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ScriptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UsesAdminPage")
                        .HasColumnType("bit");

                    b.Property<bool>("UsesScript")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ScriptId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.SqlScript", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SqlScripts");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequestedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("RequestedById");

                    b.HasIndex("StatusId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Types.IssueSeverity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IssueSeverity");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Types.TicketStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TicketStatus");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.JoinTables.TicketIssue", b =>
                {
                    b.HasOne("LeafFilter.HelpDesk.Models.Records.Issue", "Issue")
                        .WithOne("TicketIssue")
                        .HasForeignKey("LeafFilter.HelpDesk.Models.JoinTables.TicketIssue", "IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeafFilter.HelpDesk.Models.Records.Ticket", "Ticket")
                        .WithOne("TicketIssue")
                        .HasForeignKey("LeafFilter.HelpDesk.Models.JoinTables.TicketIssue", "TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Issue", b =>
                {
                    b.HasOne("LeafFilter.HelpDesk.Models.Types.IssueSeverity", "IssueSeverity")
                        .WithMany()
                        .HasForeignKey("IssueSeverityId");

                    b.HasOne("LeafFilter.HelpDesk.Models.Records.Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.Navigation("IssueSeverity");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Process", b =>
                {
                    b.HasOne("LeafFilter.HelpDesk.Models.Records.SqlScript", "Script")
                        .WithMany()
                        .HasForeignKey("ScriptId");

                    b.Navigation("Script");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Ticket", b =>
                {
                    b.HasOne("LeafFilter.HelpDesk.Models.Records.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("LeafFilter.HelpDesk.Models.Records.User", "RequestedBy")
                        .WithMany()
                        .HasForeignKey("RequestedById");

                    b.HasOne("LeafFilter.HelpDesk.Models.Types.TicketStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("AssignedTo");

                    b.Navigation("RequestedBy");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Issue", b =>
                {
                    b.Navigation("TicketIssue");
                });

            modelBuilder.Entity("LeafFilter.HelpDesk.Models.Records.Ticket", b =>
                {
                    b.Navigation("TicketIssue");
                });
#pragma warning restore 612, 618
        }
    }
}
